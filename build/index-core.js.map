{"version":3,"file":"index-core.js","mappings":"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","sources":["webpack://PRSS/webpack/universalModuleDefinition","webpack://PRSS/webpack/bootstrap","webpack://PRSS/webpack/runtime/define property getters","webpack://PRSS/webpack/runtime/hasOwnProperty shorthand","webpack://PRSS/webpack/runtime/make namespace object","webpack://PRSS/./src/core.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PRSS\"] = factory();\n\telse\n\t\troot[\"PRSS\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Shared core utilities for PRSS\r\nlet bufferItem = null;\r\nlet items = null;\r\nlet isDeployment = false;\r\n\r\nexport const init = (data, isDeploymentFlag = false) => {\r\n    isDeployment = isDeploymentFlag;\r\n    if(data) {\r\n        bufferItem = data;\r\n    } else {\r\n        console.error(\"Attempted to load empty data\", data);\r\n    }\r\n};\r\n\r\nexport const getProp = (s, bufferItemOverride?) => {\r\n    if (!bufferItem && !bufferItemOverride) {\r\n        return undefined;\r\n    }\r\n\r\n    return objGet(s, bufferItemOverride || bufferItem);\r\n};\r\n\r\nexport const getJsonProp = (s) => {\r\n    let output;\r\n\r\n    if (propExists(s)) {\r\n        try {\r\n            output = JSON.parse(getProp(s));\r\n        } catch (e) {\r\n            console.error(`Prop '${s}' could not be parsed.`, e);\r\n        }\r\n    }\r\n\r\n    return output;\r\n};\r\n\r\nexport const propExists = (s) => {\r\n    return typeof getProp(s) !== 'undefined';\r\n};\r\n\r\nexport const objGet = (s, obj) =>\r\n    s.split('.').reduce((a, b) => (a ? a[b] : ''), obj);\r\n\r\nexport const getAllProps = () => {\r\n    return bufferItem;\r\n};\r\n\r\nexport const getSiteUrl = () => {\r\n    const siteUrl = getProp('site.url');\r\n    if(siteUrl){\r\n        return siteUrl.replaceAll(\"localhost:9000\", \"localhost:3000\");\r\n    } else {\r\n        if(isDeployment){\r\n            return \"/\";\r\n        } else {\r\n            return \"http://localhost:3000\";\r\n        }\r\n    }\r\n};\r\n\r\nexport const getPathUrl = (p = '') => {\r\n    let siteUrl = getSiteUrl();\r\n    if (siteUrl && siteUrl.length && siteUrl[siteUrl.length - 1] !== '/') {\r\n        siteUrl += '/';\r\n    }\r\n\r\n    if (p && p.length && p[p.length - 1] !== '/') {\r\n        p += '/';\r\n    }\r\n\r\n    return siteUrl + p;\r\n};\r\n\r\nconst getDuration = (timeAgoInSeconds) => {\r\n    const epochs = [\r\n        ['year', 31536000],\r\n        ['month', 2592000],\r\n        ['day', 86400],\r\n        ['hour', 3600],\r\n        ['minute', 60],\r\n        ['second', 1]\r\n    ];\r\n\r\n    for (let [name, seconds] of epochs) {\r\n        const interval = Math.floor(timeAgoInSeconds / (seconds as number));\r\n\r\n        if (interval >= 1) {\r\n            return {\r\n                interval: interval,\r\n                epoch: name\r\n            };\r\n        } else {\r\n            return {\r\n                interval: 0,\r\n                epoch: \"minute\"\r\n            };\r\n        }\r\n    }\r\n};\r\n\r\nexport const timeAgo = (date) => {\r\n    const timeAgoInSeconds = Math.floor((new Date().getTime() - new Date(date).getTime()) / 1000);\r\n    const { interval, epoch } = getDuration(timeAgoInSeconds);\r\n    const suffix = interval === 1 ? '' : 's';\r\n\r\n    return `${interval} ${epoch}${suffix} ago`;\r\n};\r\n\r\nexport const formattedDate = (date) => {\r\n    const d = new Date(date);\r\n    const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(d);\r\n    const mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(d);\r\n    const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(d);\r\n\r\n    return `${da} ${mo}, ${ye}`;\r\n};\r\n\r\nexport const getStructurePaths = (nodes, prefix = '', store = []) => {\r\n    nodes.forEach((node) => {\r\n        const pathNode = node.key;\r\n        const curPath = `${prefix}/${pathNode}`;\r\n\r\n        store.push(curPath);\r\n\r\n        if (node.children) {\r\n            getStructurePaths(node.children, curPath, store);\r\n        }\r\n    });\r\n\r\n    return store;\r\n};\r\n\r\nexport const getRawPostItem = (postId, itemsOverride?) => {\r\n    const prssItems = itemsOverride || PRSSItems || [];\r\n\r\n    return prssItems.find((item) => {\r\n        return item.uuid === postId;\r\n    });\r\n};\r\n\r\nexport const stripShortcodes = (html) => {\r\n    let output = html;\r\n    const shortcodeRegex =\r\n        /\\[([a-zA-Z]+)=?([a-zA-Z0-9]+)?\\](.+?)\\[\\/[a-zA-Z]+\\]?/gi;\r\n    const matches = [...output.matchAll(shortcodeRegex)];\r\n    matches.forEach((match) => {\r\n        const [fullMatch] = match;\r\n\r\n        if (fullMatch) {\r\n            output = output.replace(fullMatch, \"\");\r\n        }\r\n    });\r\n    return output;\r\n};\r\n\r\nexport const truncateString = (str = \"\", maxLength = 50) => {\r\n    const output = str.replace(/\"/g, \"\").replace(/\\s+/g, \" \").trim();\r\n    if (!output) return null;\r\n    if (output.length <= maxLength) return output;\r\n    return `${output.substring(0, maxLength)}...`;\r\n};\r\n\r\nexport const removeTagsFromElem = (doc, tags) =>\r\n    tags.forEach((tag) =>\r\n        doc.querySelectorAll(tag).forEach((elem) => (elem.innerHTML = \"\"))\r\n    );\r\n\r\nexport const stripTags = (html) => {\r\n    const rawHtml = stripShortcodes(html);\r\n    const doc = new DOMParser().parseFromString(rawHtml, \"text/html\");\r\n    removeTagsFromElem(doc, [\"pre\", \"h1\", \"h2\"]);\r\n    return doc.body.textContent || \"\";\r\n};\r\n\r\nexport const setContent = (selector, html, createIfMissing = false) => {\r\n    let element = document.querySelector(selector);\r\n    let shouldAppend;\r\n\r\n    if(!element && createIfMissing && selector.includes(\".\") && selector.split(\".\").length === 2){\r\n        const [tagName, className] = selector.split(\".\");\r\n        element = document.createElement(tagName);\r\n        element.className = className;\r\n        shouldAppend = true;\r\n    }\r\n\r\n    if(element){\r\n        element.innerHTML = html;\r\n    }\r\n\r\n    if(shouldAppend){\r\n        document.body.appendChild(element);\r\n    }\r\n};\r\n\r\nexport const getItemBySlug = (slug) => {\r\n    return getItems().find((item) => item.slug === slug);\r\n};\r\n\r\nexport const getComponent = (slug) => {\r\n    return getItems().find((item) => item.template === \"component\" && item.slug === slug);\r\n};\r\n\r\nexport const getItem = (postId) => {\r\n    const item = getItems().find((item) => item.uuid === postId);\r\n\r\n    if(!item){\r\n        console.error(`getItem: No item found with id ${postId}`);\r\n    } else {\r\n        return item;\r\n    }\r\n};\r\n\r\nexport const appendToHead = (html) => document.head.innerHTML += html;\r\n\r\nexport const appendToBody = (html) => document.body.innerHTML += html;\r\n\r\nexport const getItems = (itemTemplate?, sortItems?, itemsOverride?, category?: string) => {\r\n    if (!PRSSItems && !itemsOverride) {\r\n        console.error(\"getItems: No PRSSItems found.\");\r\n        return [];\r\n    }\r\n\r\n    const { structure } = getProp('site');\r\n    const structurePaths = getStructurePaths(structure);\r\n\r\n    const parsedItems =\r\n        structurePaths.map((item) => {\r\n            const path = item.split('/');\r\n            let post;\r\n\r\n            const mappedPath = path.map((postId) => {\r\n                if (!postId) {\r\n                    return '';\r\n                }\r\n\r\n                post = getRawPostItem(postId);\r\n                return post ? post.slug : '';\r\n            });\r\n\r\n            const basePostPathArr = mappedPath.slice(2);\r\n            const postPath = basePostPathArr.join('/');\r\n\r\n            return post\r\n                ? {\r\n                    ...post,\r\n                    path: postPath,\r\n                    url: getPathUrl(postPath)\r\n                }\r\n                : null;\r\n        });\r\n\r\n    if (!items && parsedItems.length && !itemsOverride) {\r\n        items = parsedItems;\r\n    }\r\n\r\n    let outputItems = parsedItems;\r\n\r\n    if (itemTemplate) {\r\n        if(Array.isArray(itemTemplate)){\r\n            outputItems = outputItems.filter((item) => itemTemplate.includes(item.template));\r\n        } else {\r\n            outputItems = outputItems.filter(\r\n                (item) => item.template === itemTemplate\r\n            );\r\n        }\r\n    }\r\n\r\n    if (sortItems) {\r\n        outputItems = outputItems.sort((a, b) => b.createdAt - a.createdAt);\r\n    }\r\n\r\n    if(itemsOverride){\r\n        outputItems = outputItems.filter((item) => !!itemsOverride.find(({ uuid }) => uuid === item.uuid));\r\n    }\r\n\r\n    if( category) {\r\n        outputItems = outputItems.filter((item) => {\r\n            return item.vars?.category && item.vars.category.toLowerCase() === category?.toLowerCase();\r\n        });\r\n    }\r\n\r\n    return outputItems;\r\n};\r\n\r\nexport const walkStructure = (nodes, itemCb = null) => {\r\n    let outputNodes = [...nodes];\r\n\r\n    const parseNodes = (obj) => {\r\n        const { key, children = [] } = obj;\r\n        const post = getRawPostItem(key);\r\n\r\n        if (!post) return obj;\r\n\r\n        const parsedNode = {\r\n            key,\r\n            ...(itemCb ? itemCb(post) : {}),\r\n            children: children.map(parseNodes)\r\n        };\r\n\r\n        return parsedNode;\r\n    };\r\n\r\n    outputNodes = outputNodes.map((node) => parseNodes(node));\r\n\r\n    return outputNodes;\r\n};\r\n\r\nexport const shuffle = (arr = []) => {\r\n    const newArr = [...arr];\r\n    let currentIndex = newArr.length,\r\n        temporaryValue,\r\n        randomIndex;\r\n\r\n    while (0 !== currentIndex) {\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n        temporaryValue = newArr[currentIndex];\r\n        newArr[currentIndex] = newArr[randomIndex];\r\n        newArr[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return newArr;\r\n};\r\n\r\nexport const hasItem = (uuid, nodes) => {\r\n    return JSON.stringify(nodes).includes(uuid);\r\n};\r\n\r\nexport const findInStructure = (postId) => {\r\n    const { structure } = getProp('site');\r\n    let foundItem;\r\n\r\n    const checkNode = (node) => {\r\n        if (node.key === postId) {\r\n            foundItem = node;\r\n            return true;\r\n        } else {\r\n            return node.children ? node.children.some(checkNode) : false;\r\n        }\r\n    };\r\n\r\n    structure.some(checkNode);\r\n    return foundItem;\r\n};\r\n\r\nexport const getItemChildren = (itemId) => {\r\n    const structureItem = findInStructure(itemId);\r\n    const structureItemChildren =\r\n        structureItem && structureItem.children ? structureItem.children : [];\r\n    return structureItemChildren.map((childItem) => getItem(childItem.key));\r\n};\r\n\r\nexport const getItemChildrenBySlug = (slug) => {\r\n    const itemId = getItemBySlug(slug)?.uuid;\r\n    return getItemChildren(itemId);\r\n};\r\n\r\nexport const truncateStr = (str, len = 50) => {\r\n    if (str.length > len) return str.substring(0, len) + '...';\r\n    else return str;\r\n};\r\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","bufferItem","items","isDeployment","init","data","arguments","length","undefined","console","error","getProp","s","bufferItemOverride","objGet","getJsonProp","output","propExists","JSON","parse","e","concat","split","reduce","a","b","getAllProps","getSiteUrl","siteUrl","replaceAll","getPathUrl","p","timeAgo","date","_getDuration","timeAgoInSeconds","_i","_epochs","_epochs$_i","_slicedToArray","name","seconds","interval","Math","floor","epoch","getDuration","Date","getTime","suffix","formattedDate","d","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","getStructurePaths","nodes","prefix","store","forEach","node","pathNode","curPath","push","children","getRawPostItem","postId","itemsOverride","PRSSItems","find","item","uuid","stripShortcodes","html","_toConsumableArray","matchAll","match","fullMatch","replace","truncateString","maxLength","trim","substring","removeTagsFromElem","doc","tags","tag","querySelectorAll","elem","innerHTML","stripTags","rawHtml","DOMParser","parseFromString","body","textContent","setContent","selector","shouldAppend","createIfMissing","element","document","querySelector","includes","_selector$split2","tagName","className","createElement","appendChild","getItemBySlug","slug","getItems","getComponent","template","getItem","appendToHead","head","appendToBody","itemTemplate","sortItems","category","structure","parsedItems","map","post","postPath","slice","join","_objectSpread","path","url","outputItems","Array","isArray","filter","sort","createdAt","_ref","_item$vars","vars","toLowerCase","walkStructure","itemCb","outputNodes","parseNodes","_obj$children","shuffle","temporaryValue","randomIndex","newArr","currentIndex","random","hasItem","stringify","findInStructure","foundItem","some","checkNode","getItemChildren","itemId","structureItem","childItem","getItemChildrenBySlug","_getItemBySlug","truncateStr","str","len"],"sourceRoot":""}